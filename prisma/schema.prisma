generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql" // or your preferred database
    url      = env("DATABASE_URL")
}

//this is basically just to link between ClerkUserID and Prisma DB
model User {
    id             String          @id @default(uuid())
    mockInterviews MockInterview[]
}

model Question {
    id             String          @id @default(uuid())
    content        String
    mockInterviews MockInterview[]
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @updatedAt
}

model MockInterview {
    id                     String    @id @default(uuid())
    user                   User      @relation(fields: [userId], references: [id])
    userId                 String
    question               Question  @relation(fields: [questionId], references: [id])
    questionId             String
    recordingUrl           String? // This will store the audio URL
    videoUrl               String? // This will store the video URL
    recordingTranscription String?
    feedback               Feedback?
    createdAt              DateTime  @default(now())
    updatedAt              DateTime  @updatedAt
}

model Feedback {
    id                                 String        @id @default(uuid())
    rawContent                         String        @default("")
    mockInterview                      MockInterview @relation(fields: [mockInterviewId], references: [id])
    mockInterviewId                    String        @unique
    ethicalPrinciplesUnderstanding     Int           @default(0)
    ethicalPrinciplesFeedback          String        @default("")
    communicationSkills                Int           @default(0)
    communicationSkillsFeedback        String        @default("")
    professionalismAndEmpathy          Int           @default(0)
    professionalismAndEmpathyFeedback  String        @default("")
    legalAndMedicalLegislation         Int           @default(0)
    legalAndMedicalLegislationFeedback String        @default("")
    organizationAndStructure           Int           @default(0)
    organizationAndStructureFeedback   String        @default("")
    overallScore                       Int           @default(0)
    overallFeedback                    String        @default("")
    createdAt                          DateTime      @default(now())
    updatedAt                          DateTime      @updatedAt
}
